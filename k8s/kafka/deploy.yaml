apiVersion: v1
kind: Namespace
metadata:
  name: "kafka"
  labels:
    name: "kafka"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-config
  namespace: kafka
data:
  KAFKA_BROKER_ID: "1"
  KAFKA_ZOOKEEPER_CONNECT: "zookeeper-service:2181"
  KAFKA_LISTENERS: "PLAINTEXT://:9092"
  KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://localhost:9092"
  KAFKA_LOG_RETENTION_HOURS: "168"
  KAFKA_OFFSETS_RETENTION_MINUTES: "1440"

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: zookeeper
    app.kubernetes.io/component: database
  name: zookeeper-service
  namespace: kafka
spec:
  type: ClusterIP
  ports:
    - name: zookeeper-port
      port: 2181
      targetPort: 2181
  selector:
    app.kubernetes.io/name: zookeeper

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: zookeeper
    app.kubernetes.io/component: database
  name: zookeeper
  namespace: kafka
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: zookeeper
  template:
    metadata:
      labels:
        app.kubernetes.io/name: zookeeper
        app.kubernetes.io/component: database
    spec:
      containers:
        - image: wurstmeister/zookeeper
          name: zookeeper
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 2181
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "5Gi"
              cpu: "750m"
          livenessProbe:
            tcpSocket:
              port: 2181
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            tcpSocket:
              port: 2181
            initialDelaySeconds: 5
            periodSeconds: 5
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - zookeeper
                topologyKey: "kubernetes.io/hostname"

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: kafka
    app.kubernetes.io/component: broker
  name: kafka-service
  namespace: kafka
spec:
  ports:
    - port: 9092
      targetPort: 9092
  selector:
    app.kubernetes.io/name: kafka

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: kafka
    app.kubernetes.io/component: broker
  name: kafka
  namespace: kafka
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: kafka
  serviceName: kafka-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kafka
        app.kubernetes.io/component: broker
    spec:
      hostname: kafka
      initContainers:
        - name: wait-for-zookeeper
          image: busybox
          command:
            - sh
            - -c
            - "until nc -z -v -w30 zookeeper-service 2181; do echo 'Waiting for Zookeeper...'; sleep 5; done"
      containers:
        - name: kafka
          image: wurstmeister/kafka
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9092
          envFrom:
            - configMapRef:
                name: kafka-config
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          livenessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 5
            periodSeconds: 5
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - kafka
                topologyKey: "kubernetes.io/hostname"
  volumeClaimTemplates:
    - metadata:
        name: kafka-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
